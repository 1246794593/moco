allprojects {
    apply plugin: 'idea'
    apply plugin: 'maven'
}

subprojects {
    apply plugin: 'java'
    group = 'com.github.dreamhead.moco'
    version = '0.5'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile(
                'com.google.guava:guava:13.0.1',
                'io.netty:netty:3.5.11.Final',
                'org.slf4j:slf4j-api:1.7.2'
        )

        runtime(
                'org.slf4j:slf4j-log4j12:1.6.6',
                'log4j:log4j:1.2.17'
        )

        testCompile(
                'junit:junit:4.11',
                'org.mockito:mockito-all:1.9.0',
                'org.apache.httpcomponents:httpcore:4.2.1',
                'org.apache.httpcomponents:httpclient:4.2.1',
                'org.apache.httpcomponents:fluent-hc:4.2.1',
                'commons-logging:commons-logging:1.1.1',
        )
    }
}

project(':moco-runner') {
    dependencies {
        compile(
                project(':moco-core'),
                'com.fasterxml.jackson.core:jackson-databind:2.1.0'
        )

        testCompile project(':moco-core').sourceSets.test.output
        testRuntime project(':moco-core').sourceSets.test.resources
    }

    task uberjar(type: Jar) {
        archiveName = "${baseName}-${version}-standalone.${extension}"

        from files(sourceSets.main.output.classesDir)
        from configurations.runtime.asFileTree.files.collect { zipTree(it) }

        manifest {
            attributes 'Main-Class': 'com.github.dreamhead.moco.bootstrap.Main'
        }
    }
}

